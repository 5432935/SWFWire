<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   backgroundColor="#FF0000">
	<fx:Script>
		<![CDATA[
			import com.swfwire.utils.DisplayUtil;
			
			public var loader:Loader;
			
			private var swfWidth:Number;
			private var swfHeight:Number;
			
			private function loaderCompleteHandler(ev:Event):void
			{
				resetSWFPosition();
				dispatchEvent(new Event('loaderComplete'));
			}

			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				return;
				if(loader)
				{
					loader.scaleX = 1;
					loader.scaleY = 1;
					
					var rawBounds:Rectangle = loader.getBounds(this);
					
					var offset:Point = new Point(rawBounds.x - loader.x, rawBounds.y - loader.y);
					
					var scaledBounds:Rectangle = DisplayUtil.scaleToFit(rawBounds.width, rawBounds.height, unscaledWidth, unscaledHeight);
					loader.x = scaledBounds.x;
					loader.y = scaledBounds.y;
					loader.width = scaledBounds.width;
					loader.height = scaledBounds.height;
					
					loader.x += -offset.x * loader.scaleX;
					loader.y += -offset.y * loader.scaleY;
				}
			}
			
			public function loadBytes(bytes:ByteArray, context:LoaderContext):void
			{
				if(loader)
				{
					loader.unloadAndStop();
				}
				else
				{
					loader = new Loader();
					loader.contentLoaderInfo.addEventListener(Event.COMPLETE, loaderCompleteHandler, false, 0, true);
					content.addChild(loader);
				}
				loader.loadBytes(bytes, context);
			}
			
			public function setSWFBackground(color:uint):void
			{
				setStyle('backgroundColor', color);
			}
			
			public function setSWFSize(width:Number, height:Number):void
			{
				swfWidth = width;
				swfHeight = height;
			}
			
			public function resetSWFPosition():void
			{
				loader.scaleX = 1;
				loader.scaleY = 1;
				
				var ratioX:Number = loader.width/swfWidth;
				var ratioY:Number = loader.height/swfHeight;
				
				var scaledBounds:Rectangle = DisplayUtil.scaleToFit(swfWidth, swfHeight, unscaledWidth, unscaledHeight);
				loader.x = scaledBounds.x;
				loader.y = scaledBounds.y;
				loader.width = scaledBounds.width * ratioX;
				loader.height = scaledBounds.height * ratioY;
			}
			
			public function clearOverlay():void
			{
				overlay.graphics.clear();
			}
		]]>
	</fx:Script>
	<mx:UIComponent id="content" mask="{contentMask}"/>
	<mx:UIComponent id="overlay" width="100%" height="100%" mouseEnabled="false" mouseChildren="false" mask="{overlayMask}"/>
	<mx:Canvas id="contentMask" width="100%" height="100%" backgroundColor="#000000"/>
	<mx:Canvas id="overlayMask" width="100%" height="100%" backgroundColor="#000000"/>
</mx:Canvas>
